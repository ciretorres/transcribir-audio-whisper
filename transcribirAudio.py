# -*- coding: utf-8 -*-
"""TranscribirAudio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-wVYEl9UcGU3u0EEDA4H23DYMg2iG9RY
"""

#https://github.com/openai/whisper
#https://platform.openai.com/docs/guides/speech-to-text/longer-inputs
!pip install git+https://github.com/openai/whisper.git 
!sudo apt update && sudo apt install ffmpeg

!whisper "/content/Lukas Avendaño 2.m4a" --language Spanish

"""Videos de Youtube"""

#https://lablab.ai/t/whisper-transcribe-youtube-video
!pip install pytube
#Importing Pytube library
import pytube

# Reading the YouTube link
video_2 = "https://youtu.be/S8GlE2k72c8"
data_2 = pytube.YouTube(video_2)

# Converting and downloading as 'MP4' file
audio_2 = data_2.streams.get_audio_only()
audio_2.download()

!whisper "/content/Screen Recording 2022 11 23 at 16 01 56.mp4" --language Spanish

#https://github.com/jiaaro/pydub
!pip install git+https://github.com/jiaaro/pydub.git@master
from pydub import AudioSegment

#song = AudioSegment.from_file("/content/Screen Recording 2022-11-23 at 16.01.56.mp4", "mp4")

song = AudioSegment.from_file("/content/Screen Recording 2022-11-23 at 16.01.56 - Compressed with FlexClip.webm", "webm")

#song = AudioSegment.from_flv("/content/Screen Recording 2022-11-23 at 16.01.56 - Compressed with FlexClip.flv")

# PyDub handles time in milliseconds
ten_minutes = 10 * 60 * 1000

first_10_minutes = song[:ten_minutes]

# pydub does things in milliseconds
ten_seconds = 10 * 1000

first_10_seconds = song[:ten_seconds]

#last_5_seconds = song[-5000:]

first_10_minutes.export("good_morning_10.mp3", format="mp3")

song

!whisper "/content/Screen Recording 2022-11-23 at 16.01.56 - Compressed with FlexClip.webm" --language Spanish

!whisper "/content/Screen Recording 2022-11-23 at 16.01.56 - Compressed with FlexClip.webm" --language Spanish --model large

# Reading the YouTube link
video = "https://www.youtube.com/watch?v=4MVYOHcMOS4"
data = pytube.YouTube(video)

# Converting and downloading as 'MP4' file
audio = data.streams.get_audio_only()
audio.download()

!whisper "/content/Tasa de Interés  ¿Cómo Funciona ¿Porque sube y baja.mp4" --language Spanish